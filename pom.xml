<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.kthcorp.radix</groupId>
	<artifactId>radix-parent</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Radix: Parent</name>
	<modules>
		<module>bundles</module>
		<module>test_3rdparty_site</module>
		<module>log4jdbc-remix-for-radix</module>
	</modules>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- Sonar 2.0 Configuration for Maven 3.0, We does not use currently
		<sonar.host.url>http://211.113.53.126:8080/sonar</sonar.host.url> 
		<sonar.jdbc.url>jdbc:mysql://127.0.0.1:3306/sonar</sonar.jdbc.url> 
		<sonar.jdbc.username>sonar</sonar.jdbc.username> 
		<sonar.jdbc.password>sonar</sonar.jdbc.password> 
		<sonar.jdbc.driver>com.mysql.jdbc.Driver</sonar.jdbc.driver> 
		<sonar.jdbc.useUnicode>true</sonar.jdbc.useUnicode>
		<sonar.jdbc.characterEncoding>UTF-8</sonar.jdbc.characterEncoding>
		-->
	</properties>	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>utf-8</encoding>
				</configuration>
				<version>2.3.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<sonarHostURL>http://codeq.kthcorp.com/sonar</sonarHostURL>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<instrumentation>
						<excludes>		              		              
							<exclude>com/kthcorp/radix/**/domain/**/*.class</exclude>		              
							<exclude>com/kthcorp/radix/**/annotation/**/*.class</exclude>		              
							<exclude>com/kthcorp/radix/**/exception/**/*.class</exclude>		              
							<exclude>com/kthcorp/radix/**/util/**/*.class</exclude>		              
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>copy-test-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/test-classes</outputDirectory>
							<resources>
								<resource>
									<directory>src/test/java</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
          <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.0.4</version>
                <executions>
                    <execution>
                    	<phase>prepare-package</phase>
                        <goals>
                            <goal>revision</goal>
                         </goals>
                    </execution>
                </executions>

                <configuration>
                    <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>

                    <!-- false is default here, it prints some more information during the build -->
                    <verbose>true</verbose>

                    <!--
                        If you'd like to tell the plugin where your .git directory is,
                        use this setting, otherwise we'll perform a search trying to
                        figure out the right directory. It's better to add it explicite IMHO.
                    -->
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>

                    <!-- ALTERNATE SETUP - GENERATE FILE -->
                    <!--
                        If you want to keep git information, even in your WAR file etc,
                        use this mode, which will generate a properties file (with filled out values)
                        which you can then normally read using new Properties().load(/**/)
                    -->

                    <!--
                        this is true by default; You may want to set this to false, if the plugin should run inside a
                        <packaging>pom</packaging> project. Most projects won't need to override this property.

                        For an use-case for this kind of behaviour see: https://github.com/ktoso/maven-git-commit-id-plugin/issues/21
                    -->
                    <skipPoms>true</skipPoms>

                    <!-- this is false by default, forces the plugin to generate the git.properties file -->
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>

                    <!-- The path for the to be generated properties file, it's relative to ${project.basedir} -->
                    <generateGitPropertiesFilename>target/classes/META-INF/source_revision_info.properties</generateGitPropertiesFilename>

                    <!-- true by default, controls whether the plugin will fail when no .git directory is found, when set to false the plugin will just skip execution -->
                    <!-- @since 2.0.4 -->
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                </configuration>
            </plugin>			
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
				<version>2.12</version>
			</plugin>
		</plugins>
	</reporting>
	<repositories>
		<repository>
			<id>central</id>
			<!-- ToDO: <url>http://lib.kthcorp.com/artifactory/repo</url> -->
			<url>http://211.42.140.171:8080/artifactory/repo</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>public</id>
			<url>http://repo1.maven.org</url>
		</repository>
		<repository>
			<id>public_m2</id>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>eviwarePluginRepository</id>
			<url>http://www.eviware.com/repository/maven2</url>
		</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
		<snapshotRepository>
			<id>snap</id>
			<url>http://211.113.53.126/artifactory/libs-snapshot-local</url>
		</snapshotRepository>
		<repository>
			<id>rel</id>
			<url>http://211.113.53.126/artifactory/libs-release-local</url>
		</repository>
	</distributionManagement>
</project>
